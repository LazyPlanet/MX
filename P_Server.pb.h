// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: P_Server.proto

#ifndef PROTOBUF_P_5fServer_2eproto__INCLUDED
#define PROTOBUF_P_5fServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Adoter {
namespace Asset {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_P_5fServer_2eproto();
void protobuf_AssignDesc_P_5fServer_2eproto();
void protobuf_ShutdownFile_P_5fServer_2eproto();

class MsgItem;
class MsgItems;
class LogMessage;

enum MSG_TYPE {
  MSG_TYPE_BEGIN = 1,
  MSG_TYPE_AOI_ENTER = 2,
  MSG_TYPE_AOI_LEAVE = 3,
  MSG_TYPE_AOI_MOVE = 4
};
bool MSG_TYPE_IsValid(int value);
const MSG_TYPE MSG_TYPE_MIN = MSG_TYPE_BEGIN;
const MSG_TYPE MSG_TYPE_MAX = MSG_TYPE_AOI_MOVE;
const int MSG_TYPE_ARRAYSIZE = MSG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_TYPE_descriptor();
inline const ::std::string& MSG_TYPE_Name(MSG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_TYPE_descriptor(), value);
}
inline bool MSG_TYPE_Parse(
    const ::std::string& name, MSG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_TYPE>(
    MSG_TYPE_descriptor(), name, value);
}
enum LOG_TYPE {
  BEGIN = 1,
  NORMAL = 2,
  SYSTEM = 3,
  RECHARGE = 4,
  COMMON_LIMIT = 5,
  COMMON_REWARD = 6,
  CONSUME_DIAMOND = 7,
  INCREASE_DIAMOND = 8,
  CONSUME_HUANLEDOU = 9,
  INCREASE_HUANLEDOU = 10,
  PLAYER_INFO = 11,
  PLAYER_LOGIN = 12,
  SEND_PROTOCOL = 13,
  PLAYER_MATCH = 14,
  PAI_PERATION = 15,
  GAME_CARDS = 16
};
bool LOG_TYPE_IsValid(int value);
const LOG_TYPE LOG_TYPE_MIN = BEGIN;
const LOG_TYPE LOG_TYPE_MAX = GAME_CARDS;
const int LOG_TYPE_ARRAYSIZE = LOG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* LOG_TYPE_descriptor();
inline const ::std::string& LOG_TYPE_Name(LOG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    LOG_TYPE_descriptor(), value);
}
inline bool LOG_TYPE_Parse(
    const ::std::string& name, LOG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LOG_TYPE>(
    LOG_TYPE_descriptor(), name, value);
}
enum LOG_LEVEL {
  FATAL = 1,
  ERROR = 2,
  WARNNING = 3,
  TRACE = 4,
  ACTION = 5,
  INFO = 6,
  MAX_LOG_LEVEL = 7
};
bool LOG_LEVEL_IsValid(int value);
const LOG_LEVEL LOG_LEVEL_MIN = FATAL;
const LOG_LEVEL LOG_LEVEL_MAX = MAX_LOG_LEVEL;
const int LOG_LEVEL_ARRAYSIZE = LOG_LEVEL_MAX + 1;

const ::google::protobuf::EnumDescriptor* LOG_LEVEL_descriptor();
inline const ::std::string& LOG_LEVEL_Name(LOG_LEVEL value) {
  return ::google::protobuf::internal::NameOfEnum(
    LOG_LEVEL_descriptor(), value);
}
inline bool LOG_LEVEL_Parse(
    const ::std::string& name, LOG_LEVEL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LOG_LEVEL>(
    LOG_LEVEL_descriptor(), name, value);
}
// ===================================================================

class MsgItem : public ::google::protobuf::Message {
 public:
  MsgItem();
  virtual ~MsgItem();

  MsgItem(const MsgItem& from);

  inline MsgItem& operator=(const MsgItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItem& default_instance();

  void Swap(MsgItem* other);

  // implements Message ----------------------------------------------

  MsgItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgItem& from);
  void MergeFrom(const MsgItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  inline ::google::protobuf::int64 message_id() const;
  inline void set_message_id(::google::protobuf::int64 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 priority = 3 [default = 10];
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 3;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // optional int64 sender = 4;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 4;
  inline ::google::protobuf::int64 sender() const;
  inline void set_sender(::google::protobuf::int64 value);

  // optional int64 receiver = 5;
  inline bool has_receiver() const;
  inline void clear_receiver();
  static const int kReceiverFieldNumber = 5;
  inline ::google::protobuf::int64 receiver() const;
  inline void set_receiver(::google::protobuf::int64 value);

  // optional int64 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional int32 delay = 7;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 7;
  inline ::google::protobuf::int32 delay() const;
  inline void set_delay(::google::protobuf::int32 value);

  // optional bytes content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Adoter.Asset.MsgItem)
 private:
  inline void set_has_message_id();
  inline void clear_has_message_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_receiver();
  inline void clear_has_receiver();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 message_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int64 sender_;
  ::google::protobuf::int64 receiver_;
  ::google::protobuf::int64 time_;
  ::std::string* content_;
  ::google::protobuf::int32 delay_;
  friend void  protobuf_AddDesc_P_5fServer_2eproto();
  friend void protobuf_AssignDesc_P_5fServer_2eproto();
  friend void protobuf_ShutdownFile_P_5fServer_2eproto();

  void InitAsDefaultInstance();
  static MsgItem* default_instance_;
};
// -------------------------------------------------------------------

class MsgItems : public ::google::protobuf::Message {
 public:
  MsgItems();
  virtual ~MsgItems();

  MsgItems(const MsgItems& from);

  inline MsgItems& operator=(const MsgItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItems& default_instance();

  void Swap(MsgItems* other);

  // implements Message ----------------------------------------------

  MsgItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgItems& from);
  void MergeFrom(const MsgItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Adoter.Asset.MsgItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::Adoter::Asset::MsgItem& items(int index) const;
  inline ::Adoter::Asset::MsgItem* mutable_items(int index);
  inline ::Adoter::Asset::MsgItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::MsgItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::MsgItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Adoter.Asset.MsgItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::MsgItem > items_;
  friend void  protobuf_AddDesc_P_5fServer_2eproto();
  friend void protobuf_AssignDesc_P_5fServer_2eproto();
  friend void protobuf_ShutdownFile_P_5fServer_2eproto();

  void InitAsDefaultInstance();
  static MsgItems* default_instance_;
};
// -------------------------------------------------------------------

class LogMessage : public ::google::protobuf::Message {
 public:
  LogMessage();
  virtual ~LogMessage();

  LogMessage(const LogMessage& from);

  inline LogMessage& operator=(const LogMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogMessage& default_instance();

  void Swap(LogMessage* other);

  // implements Message ----------------------------------------------

  LogMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogMessage& from);
  void MergeFrom(const LogMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int64 player_id() const;
  inline void set_player_id(::google::protobuf::int64 value);

  // optional int64 server_id = 2;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  inline ::google::protobuf::int64 server_id() const;
  inline void set_server_id(::google::protobuf::int64 value);

  // optional bytes server_name = 3;
  inline bool has_server_name() const;
  inline void clear_server_name();
  static const int kServerNameFieldNumber = 3;
  inline const ::std::string& server_name() const;
  inline void set_server_name(const ::std::string& value);
  inline void set_server_name(const char* value);
  inline void set_server_name(const void* value, size_t size);
  inline ::std::string* mutable_server_name();
  inline ::std::string* release_server_name();
  inline void set_allocated_server_name(::std::string* server_name);

  // optional .Adoter.Asset.LOG_TYPE type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::Adoter::Asset::LOG_TYPE type() const;
  inline void set_type(::Adoter::Asset::LOG_TYPE value);

  // optional .Adoter.Asset.LOG_LEVEL level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::Adoter::Asset::LOG_LEVEL level() const;
  inline void set_level(::Adoter::Asset::LOG_LEVEL value);

  // optional string client_ip = 6;
  inline bool has_client_ip() const;
  inline void clear_client_ip();
  static const int kClientIpFieldNumber = 6;
  inline const ::std::string& client_ip() const;
  inline void set_client_ip(const ::std::string& value);
  inline void set_client_ip(const char* value);
  inline void set_client_ip(const char* value, size_t size);
  inline ::std::string* mutable_client_ip();
  inline ::std::string* release_client_ip();
  inline void set_allocated_client_ip(::std::string* client_ip);

  // optional int64 common_limit = 7;
  inline bool has_common_limit() const;
  inline void clear_common_limit();
  static const int kCommonLimitFieldNumber = 7;
  inline ::google::protobuf::int64 common_limit() const;
  inline void set_common_limit(::google::protobuf::int64 value);

  // optional int64 common_reward = 8;
  inline bool has_common_reward() const;
  inline void clear_common_reward();
  static const int kCommonRewardFieldNumber = 8;
  inline ::google::protobuf::int64 common_reward() const;
  inline void set_common_reward(::google::protobuf::int64 value);

  // repeated int32 cards = 9;
  inline int cards_size() const;
  inline void clear_cards();
  static const int kCardsFieldNumber = 9;
  inline ::google::protobuf::int32 cards(int index) const;
  inline void set_cards(int index, ::google::protobuf::int32 value);
  inline void add_cards(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // optional string content = 20;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 20;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Adoter.Asset.LogMessage)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_name();
  inline void clear_has_server_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_client_ip();
  inline void clear_has_client_ip();
  inline void set_has_common_limit();
  inline void clear_has_common_limit();
  inline void set_has_common_reward();
  inline void clear_has_common_reward();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 player_id_;
  ::google::protobuf::int64 server_id_;
  ::std::string* server_name_;
  int type_;
  int level_;
  ::std::string* client_ip_;
  ::google::protobuf::int64 common_limit_;
  ::google::protobuf::int64 common_reward_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::std::string* content_;
  friend void  protobuf_AddDesc_P_5fServer_2eproto();
  friend void protobuf_AssignDesc_P_5fServer_2eproto();
  friend void protobuf_ShutdownFile_P_5fServer_2eproto();

  void InitAsDefaultInstance();
  static LogMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgItem

// optional int64 message_id = 1;
inline bool MsgItem::has_message_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgItem::set_has_message_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgItem::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgItem::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
  clear_has_message_id();
}
inline ::google::protobuf::int64 MsgItem::message_id() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.message_id)
  return message_id_;
}
inline void MsgItem::set_message_id(::google::protobuf::int64 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.message_id)
}

// optional int32 type = 2;
inline bool MsgItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MsgItem::type() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.type)
  return type_;
}
inline void MsgItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.type)
}

// optional int32 priority = 3 [default = 10];
inline bool MsgItem::has_priority() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgItem::set_has_priority() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgItem::clear_has_priority() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgItem::clear_priority() {
  priority_ = 10;
  clear_has_priority();
}
inline ::google::protobuf::int32 MsgItem::priority() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.priority)
  return priority_;
}
inline void MsgItem::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.priority)
}

// optional int64 sender = 4;
inline bool MsgItem::has_sender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgItem::set_has_sender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgItem::clear_has_sender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgItem::clear_sender() {
  sender_ = GOOGLE_LONGLONG(0);
  clear_has_sender();
}
inline ::google::protobuf::int64 MsgItem::sender() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.sender)
  return sender_;
}
inline void MsgItem::set_sender(::google::protobuf::int64 value) {
  set_has_sender();
  sender_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.sender)
}

// optional int64 receiver = 5;
inline bool MsgItem::has_receiver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgItem::set_has_receiver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgItem::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgItem::clear_receiver() {
  receiver_ = GOOGLE_LONGLONG(0);
  clear_has_receiver();
}
inline ::google::protobuf::int64 MsgItem::receiver() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.receiver)
  return receiver_;
}
inline void MsgItem::set_receiver(::google::protobuf::int64 value) {
  set_has_receiver();
  receiver_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.receiver)
}

// optional int64 time = 6;
inline bool MsgItem::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgItem::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgItem::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 MsgItem::time() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.time)
  return time_;
}
inline void MsgItem::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.time)
}

// optional int32 delay = 7;
inline bool MsgItem::has_delay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgItem::set_has_delay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgItem::clear_has_delay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgItem::clear_delay() {
  delay_ = 0;
  clear_has_delay();
}
inline ::google::protobuf::int32 MsgItem::delay() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.delay)
  return delay_;
}
inline void MsgItem::set_delay(::google::protobuf::int32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.delay)
}

// optional bytes content = 8;
inline bool MsgItem::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgItem::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgItem::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgItem::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MsgItem::content() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItem.content)
  return *content_;
}
inline void MsgItem::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Adoter.Asset.MsgItem.content)
}
inline void MsgItem::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Adoter.Asset.MsgItem.content)
}
inline void MsgItem::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Adoter.Asset.MsgItem.content)
}
inline ::std::string* MsgItem::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.MsgItem.content)
  return content_;
}
inline ::std::string* MsgItem::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgItem::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Adoter.Asset.MsgItem.content)
}

// -------------------------------------------------------------------

// MsgItems

// repeated .Adoter.Asset.MsgItem items = 1;
inline int MsgItems::items_size() const {
  return items_.size();
}
inline void MsgItems::clear_items() {
  items_.Clear();
}
inline const ::Adoter::Asset::MsgItem& MsgItems::items(int index) const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.MsgItems.items)
  return items_.Get(index);
}
inline ::Adoter::Asset::MsgItem* MsgItems::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.MsgItems.items)
  return items_.Mutable(index);
}
inline ::Adoter::Asset::MsgItem* MsgItems::add_items() {
  // @@protoc_insertion_point(field_add:Adoter.Asset.MsgItems.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::MsgItem >&
MsgItems::items() const {
  // @@protoc_insertion_point(field_list:Adoter.Asset.MsgItems.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::MsgItem >*
MsgItems::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Adoter.Asset.MsgItems.items)
  return &items_;
}

// -------------------------------------------------------------------

// LogMessage

// optional int64 player_id = 1;
inline bool LogMessage::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogMessage::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogMessage::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogMessage::clear_player_id() {
  player_id_ = GOOGLE_LONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::int64 LogMessage::player_id() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.player_id)
  return player_id_;
}
inline void LogMessage::set_player_id(::google::protobuf::int64 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.player_id)
}

// optional int64 server_id = 2;
inline bool LogMessage::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogMessage::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogMessage::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogMessage::clear_server_id() {
  server_id_ = GOOGLE_LONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::int64 LogMessage::server_id() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.server_id)
  return server_id_;
}
inline void LogMessage::set_server_id(::google::protobuf::int64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.server_id)
}

// optional bytes server_name = 3;
inline bool LogMessage::has_server_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogMessage::set_has_server_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogMessage::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogMessage::clear_server_name() {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_->clear();
  }
  clear_has_server_name();
}
inline const ::std::string& LogMessage::server_name() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.server_name)
  return *server_name_;
}
inline void LogMessage::set_server_name(const ::std::string& value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.server_name)
}
inline void LogMessage::set_server_name(const char* value) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Adoter.Asset.LogMessage.server_name)
}
inline void LogMessage::set_server_name(const void* value, size_t size) {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  server_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Adoter.Asset.LogMessage.server_name)
}
inline ::std::string* LogMessage::mutable_server_name() {
  set_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    server_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.LogMessage.server_name)
  return server_name_;
}
inline ::std::string* LogMessage::release_server_name() {
  clear_has_server_name();
  if (server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = server_name_;
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LogMessage::set_allocated_server_name(::std::string* server_name) {
  if (server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete server_name_;
  }
  if (server_name) {
    set_has_server_name();
    server_name_ = server_name;
  } else {
    clear_has_server_name();
    server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Adoter.Asset.LogMessage.server_name)
}

// optional .Adoter.Asset.LOG_TYPE type = 4;
inline bool LogMessage::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogMessage::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogMessage::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Adoter::Asset::LOG_TYPE LogMessage::type() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.type)
  return static_cast< ::Adoter::Asset::LOG_TYPE >(type_);
}
inline void LogMessage::set_type(::Adoter::Asset::LOG_TYPE value) {
  assert(::Adoter::Asset::LOG_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.type)
}

// optional .Adoter.Asset.LOG_LEVEL level = 5;
inline bool LogMessage::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogMessage::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogMessage::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogMessage::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::Adoter::Asset::LOG_LEVEL LogMessage::level() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.level)
  return static_cast< ::Adoter::Asset::LOG_LEVEL >(level_);
}
inline void LogMessage::set_level(::Adoter::Asset::LOG_LEVEL value) {
  assert(::Adoter::Asset::LOG_LEVEL_IsValid(value));
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.level)
}

// optional string client_ip = 6;
inline bool LogMessage::has_client_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogMessage::set_has_client_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogMessage::clear_has_client_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogMessage::clear_client_ip() {
  if (client_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_->clear();
  }
  clear_has_client_ip();
}
inline const ::std::string& LogMessage::client_ip() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.client_ip)
  return *client_ip_;
}
inline void LogMessage::set_client_ip(const ::std::string& value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.client_ip)
}
inline void LogMessage::set_client_ip(const char* value) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:Adoter.Asset.LogMessage.client_ip)
}
inline void LogMessage::set_client_ip(const char* value, size_t size) {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  client_ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Adoter.Asset.LogMessage.client_ip)
}
inline ::std::string* LogMessage::mutable_client_ip() {
  set_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.LogMessage.client_ip)
  return client_ip_;
}
inline ::std::string* LogMessage::release_client_ip() {
  clear_has_client_ip();
  if (client_ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = client_ip_;
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LogMessage::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete client_ip_;
  }
  if (client_ip) {
    set_has_client_ip();
    client_ip_ = client_ip;
  } else {
    clear_has_client_ip();
    client_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Adoter.Asset.LogMessage.client_ip)
}

// optional int64 common_limit = 7;
inline bool LogMessage::has_common_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LogMessage::set_has_common_limit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LogMessage::clear_has_common_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LogMessage::clear_common_limit() {
  common_limit_ = GOOGLE_LONGLONG(0);
  clear_has_common_limit();
}
inline ::google::protobuf::int64 LogMessage::common_limit() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.common_limit)
  return common_limit_;
}
inline void LogMessage::set_common_limit(::google::protobuf::int64 value) {
  set_has_common_limit();
  common_limit_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.common_limit)
}

// optional int64 common_reward = 8;
inline bool LogMessage::has_common_reward() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LogMessage::set_has_common_reward() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LogMessage::clear_has_common_reward() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LogMessage::clear_common_reward() {
  common_reward_ = GOOGLE_LONGLONG(0);
  clear_has_common_reward();
}
inline ::google::protobuf::int64 LogMessage::common_reward() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.common_reward)
  return common_reward_;
}
inline void LogMessage::set_common_reward(::google::protobuf::int64 value) {
  set_has_common_reward();
  common_reward_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.common_reward)
}

// repeated int32 cards = 9;
inline int LogMessage::cards_size() const {
  return cards_.size();
}
inline void LogMessage::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 LogMessage::cards(int index) const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.cards)
  return cards_.Get(index);
}
inline void LogMessage::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.cards)
}
inline void LogMessage::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:Adoter.Asset.LogMessage.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LogMessage::cards() const {
  // @@protoc_insertion_point(field_list:Adoter.Asset.LogMessage.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LogMessage::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Adoter.Asset.LogMessage.cards)
  return &cards_;
}

// optional string content = 20;
inline bool LogMessage::has_content() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LogMessage::set_has_content() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LogMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LogMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& LogMessage::content() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.LogMessage.content)
  return *content_;
}
inline void LogMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Adoter.Asset.LogMessage.content)
}
inline void LogMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Adoter.Asset.LogMessage.content)
}
inline void LogMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Adoter.Asset.LogMessage.content)
}
inline ::std::string* LogMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.LogMessage.content)
  return content_;
}
inline ::std::string* LogMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LogMessage::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Adoter.Asset.LogMessage.content)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Asset
}  // namespace Adoter

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Adoter::Asset::MSG_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Adoter::Asset::MSG_TYPE>() {
  return ::Adoter::Asset::MSG_TYPE_descriptor();
}
template <> struct is_proto_enum< ::Adoter::Asset::LOG_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Adoter::Asset::LOG_TYPE>() {
  return ::Adoter::Asset::LOG_TYPE_descriptor();
}
template <> struct is_proto_enum< ::Adoter::Asset::LOG_LEVEL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Adoter::Asset::LOG_LEVEL>() {
  return ::Adoter::Asset::LOG_LEVEL_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_P_5fServer_2eproto__INCLUDED
